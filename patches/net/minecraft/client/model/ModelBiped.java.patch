--- a/net/minecraft/client/model/ModelBiped.java
+++ b/net/minecraft/client/model/ModelBiped.java
@@ -1,7 +1,11 @@
 package net.minecraft.client.model;
 
+import com.mtbs3d.minecrift.render.ik.IKHelper;
+import com.mtbs3d.minecrift.render.ik.IKInfo;
+import net.minecraft.client.Minecraft;
 import net.minecraft.entity.Entity;
 import net.minecraft.util.MathHelper;
+import net.minecraft.util.Vec3;
 import org.lwjgl.opengl.GL11;
 
 public class ModelBiped extends ModelBase
@@ -16,6 +20,15 @@
     public ModelRenderer bipedEars;
     public ModelRenderer bipedCloak;
 
+    /** MINECRIFT */
+    public boolean _renderHead = true;
+    public boolean _renderHeadWear = true;
+    public float vrOffset = 0.0F;
+    public float scaleFactor = 0f;
+    public float height = 0f;
+    Vec3 centreEyePos = Vec3.createVectorHelper(0, 0, 0);
+    /** END MINECRIFT */
+
     /**
      * Records whether the model should be rendered holding an item in the left hand, and if that item is a block.
      */
@@ -45,6 +58,13 @@
     {
         this.textureWidth = p_i1149_3_;
         this.textureHeight = p_i1149_4_;
+
+        /** MINECRIFT **/
+        this.initialisedForVr = false;
+        this.scaleFactor = p_i1149_1_;
+        this.height = p_i1149_2_;
+        /** END MINECRIFT **/
+
         this.bipedCloak = new ModelRenderer(this, 0, 0);
         this.bipedCloak.addBox(-5.0F, 0.0F, -1.0F, 10, 16, 1, p_i1149_1_);
         this.bipedEars = new ModelRenderer(this, 24, 0);
@@ -74,6 +94,86 @@
         this.bipedLeftLeg.setRotationPoint(1.9F, 12.0F + p_i1149_2_, 0.0F);
     }
 
+    /** MINECRIFT **/
+    public void initForVr()
+    {
+        // Body
+        this.bipedBody = createModelRenderer(
+                8, 12, 4,
+                -4.0F, -12.0F, -2.0F,
+                0.0F, 12.0F + this.height, 0.0F,
+                this.scaleFactor, 16, 16);
+
+        // Head - child of body - pos relative to body pos
+        this.bipedHead = createModelRenderer(
+                8, 8, 8,
+                -4.0F, -8.0F, -4.0F,
+                0.0F, -12.0F + this.height, 0.0F,
+                this.scaleFactor, 0, 0);
+
+        // Headwear - child of body - pos relative to body pos
+        this.bipedHeadwear = createModelRenderer(
+                8, 8, 8,
+                -4.0F, -8.0F, -4.0F,
+                0.0F, -12.0F + this.height, 0.0F,
+                this.scaleFactor, 32, 0);
+
+        // Ears - child of body - pos relative to body pos
+        this.bipedEars = createModelRenderer(
+                6, 6, 1,
+                -3.0F, -6.0F, -1.0F,
+                0.0F, -12.0F + this.height, 0.0F,
+                this.scaleFactor, 24, 0);
+
+        // Left arm - child of body - pos relative to body pos
+        this.bipedLeftArm = createModelRenderer(
+                4, 12, 4,
+                -1.0F, -2.0F, -2.0F,
+                5.0F, -12.0F + 2.0F + this.height, 0.0F,
+                this.scaleFactor, 40, 16);
+        this.bipedLeftArm.mirror = true;
+
+        // Right arm - child of body - pos relative to body pos
+        this.bipedRightArm = createModelRenderer(
+                4, 12, 4,
+                -3.0F, -2.0F, -2.0F,
+                -5.0F, -12.0F + 2.0F + this.height, 0.0F,
+                this.scaleFactor, 40, 16);
+
+        // Right arm - child of body - pos relative to body pos
+        this.bipedCloak = createModelRenderer(
+                10, 16, 1,
+                -5.0F, 0.0F, -1.0F,
+                0.0F, -12.0F + this.height, 0.0F,
+                this.scaleFactor, 0, 0);
+
+        // Set most parts as children of the body. The rotation point
+        // of the body is changed to within the hips, and all other
+        // parts except the legs will rotate with the body.
+        // We have to render each part manually however, so don't
+        // render children.
+
+        this.bipedBody.addChild(this.bipedLeftArm);
+        this.bipedBody.addChild(this.bipedRightArm);
+        this.bipedBody.addChild(this.bipedHead);
+        this.bipedBody.addChild(this.bipedHeadwear);
+        this.bipedBody.addChild(this.bipedEars);
+        this.bipedBody.addChild(this.bipedCloak);
+        this.bipedBody.renderChildren = false;
+
+        // Add legs as per usual for now.
+        this.bipedRightLeg = new ModelRenderer(this, 0, 16);
+        this.bipedRightLeg.addBox(-2.0F, 0.0F, -2.0F, 4, 12, 4, this.scaleFactor);
+        this.bipedRightLeg.setRotationPoint(-1.9F, 12.0F + this.height, 0.0F);
+        this.bipedLeftLeg = new ModelRenderer(this, 0, 16);
+        this.bipedLeftLeg.mirror = true;
+        this.bipedLeftLeg.addBox(-2.0F, 0.0F, -2.0F, 4, 12, 4, this.scaleFactor);
+        this.bipedLeftLeg.setRotationPoint(1.9F, 12.0F + this.height, 0.0F);
+
+        this.initialisedForVr = true;
+    }
+    /** END MINECRIFT **/
+
     /**
      * Sets the models various rotation angles then renders the model.
      */
@@ -87,7 +187,10 @@
             GL11.glPushMatrix();
             GL11.glScalef(1.5F / var8, 1.5F / var8, 1.5F / var8);
             GL11.glTranslatef(0.0F, 16.0F * p_78088_7_, 0.0F);
-            this.bipedHead.render(p_78088_7_);
+			/** MINECRIFT */
+            if (_renderHead)
+        	this.bipedHead.render(p_78088_7_);
+			/** END MINECRIFT */
             GL11.glPopMatrix();
             GL11.glPushMatrix();
             GL11.glScalef(1.0F / var8, 1.0F / var8, 1.0F / var8);
@@ -97,18 +200,29 @@
             this.bipedLeftArm.render(p_78088_7_);
             this.bipedRightLeg.render(p_78088_7_);
             this.bipedLeftLeg.render(p_78088_7_);
+			/** MINECRIFT */
+            if (_renderHeadWear)
             this.bipedHeadwear.render(p_78088_7_);
+			/** END MINECRIFT */
             GL11.glPopMatrix();
         }
         else
         {
+            /** MINECRIFT */
+            GL11.glTranslatef(0.0F, 0.0F, vrOffset );
+            if (_renderHead)
             this.bipedHead.render(p_78088_7_);
+			/** END MINECRIFT */
             this.bipedBody.render(p_78088_7_);
             this.bipedRightArm.render(p_78088_7_);
             this.bipedLeftArm.render(p_78088_7_);
             this.bipedRightLeg.render(p_78088_7_);
             this.bipedLeftLeg.render(p_78088_7_);
+            /** MINECRIFT */
+            if (_renderHeadWear)
             this.bipedHeadwear.render(p_78088_7_);
+            GL11.glTranslatef(0.0F, 0.0F, -vrOffset );
+			/** END MINECRIFT */
         }
     }
 
@@ -119,6 +233,18 @@
      */
     public void setRotationAngles(float p_78087_1_, float p_78087_2_, float p_78087_3_, float p_78087_4_, float p_78087_5_, float p_78087_6_, Entity p_78087_7_)
     {
+        /** MINECRIFT **/
+    	
+        if (this.vrMode) {
+            if (!initialisedForVr) {
+                initForVr();
+            }
+
+            this.bipedBody.rotateAngleX = 0;
+            this.bipedBody.rotateAngleZ = 0;
+        }
+        
+        /** END MINECRIFT **/
         this.bipedHead.rotateAngleY = p_78087_4_ / (180F / (float)Math.PI);
         this.bipedHead.rotateAngleX = p_78087_5_ / (180F / (float)Math.PI);
         this.bipedHeadwear.rotateAngleY = this.bipedHead.rotateAngleY;
@@ -142,6 +268,9 @@
             this.bipedLeftLeg.rotateAngleY = -((float)Math.PI / 10F);
         }
 
+
+        // TODO: Workout how to use correct held item offset wheh avatar IK is enabled
+
         if (this.heldItemLeft != 0)
         {
             this.bipedLeftArm.rotateAngleX = this.bipedLeftArm.rotateAngleX * 0.5F - ((float)Math.PI / 10F) * (float)this.heldItemLeft;
@@ -181,25 +310,75 @@
 
         if (this.isSneak)
         {
-            this.bipedBody.rotateAngleX = 0.5F;
-            this.bipedRightArm.rotateAngleX += 0.4F;
-            this.bipedLeftArm.rotateAngleX += 0.4F;
-            this.bipedRightLeg.rotationPointZ = 4.0F;
-            this.bipedLeftLeg.rotationPointZ = 4.0F;
-            this.bipedRightLeg.rotationPointY = 9.0F;
-            this.bipedLeftLeg.rotationPointY = 9.0F;
-            this.bipedHead.rotationPointY = 1.0F;
-            this.bipedHeadwear.rotationPointY = 1.0F;
+            if (!this.vrMode) {
+                this.bipedBody.rotateAngleX = 0.5F;
+                this.bipedRightArm.rotateAngleX += 0.4F;
+                this.bipedLeftArm.rotateAngleX += 0.4F;
+                this.bipedRightLeg.rotationPointZ = 4.0F;
+                this.bipedLeftLeg.rotationPointZ = 4.0F;
+                this.bipedRightLeg.rotationPointY = 9.0F;
+                this.bipedLeftLeg.rotationPointY = 9.0F;
+                this.bipedHead.rotationPointY = 1.0F;
+                this.bipedHeadwear.rotationPointY = 1.0F;
+            }
+            else {
+                this.bipedBody.rotateAngleX = 0.5F;
+            }
         }
         else
         {
-            this.bipedBody.rotateAngleX = 0.0F;
-            this.bipedRightLeg.rotationPointZ = 0.1F;
-            this.bipedLeftLeg.rotationPointZ = 0.1F;
-            this.bipedRightLeg.rotationPointY = 12.0F;
-            this.bipedLeftLeg.rotationPointY = 12.0F;
-            this.bipedHead.rotationPointY = 0.0F;
-            this.bipedHeadwear.rotationPointY = 0.0F;
+            if (!vrMode) {
+                this.bipedBody.rotateAngleX = 0.0F;
+                this.bipedRightLeg.rotationPointZ = 0.1F;
+                this.bipedLeftLeg.rotationPointZ = 0.1F;
+                this.bipedRightLeg.rotationPointY = 12.0F;
+                this.bipedLeftLeg.rotationPointY = 12.0F;
+                this.bipedHead.rotationPointY = 0.0F;
+                this.bipedHeadwear.rotationPointY = 0.0F;
+            }
+            else { //what did this do.... oculus leftovers.
+                if (false){ // (Minecraft.getMinecraft().positionTracker != null) {
+                    //centreEyePos = Minecraft.getMinecraft().positionTracker.getCenterEyePosition();
+                    //centreEyePos.yCoord += 1.2d; // Account for position of body rotation point
+                }
+                else {
+                    centreEyePos.xCoord = 0;
+                    centreEyePos.yCoord = 0;
+                    centreEyePos.zCoord = 0;
+                }
+
+                //System.out.println("xPos: " + centreEyePos.xCoord + ", yPos: " + centreEyePos.yCoord  + ", zPos: " + centreEyePos.zCoord);
+
+                double xyAngle =  (Math.PI / 2d) + Math.atan(centreEyePos.yCoord / centreEyePos.xCoord);
+                if (centreEyePos.xCoord >= 0) {
+                    xyAngle -= Math.PI;
+                }
+                double zyAngle = (Math.PI / 2d) + Math.atan(centreEyePos.yCoord / centreEyePos.zCoord);
+                if (centreEyePos.zCoord >= 0) {
+                    zyAngle -= Math.PI;
+                }
+
+                //System.out.println("rotateAngleX: " + Math.toDegrees(zyAngle));
+
+                this.bipedBody.rotateAngleX += (float)zyAngle;
+                this.bipedRightArm.rotateAngleX -= (float)zyAngle / 2d;
+                this.bipedLeftArm.rotateAngleX -= (float)zyAngle / 2d;
+                this.bipedHead.rotateAngleX -= (float)zyAngle;
+                this.bipedHeadwear.rotateAngleX -= (float)zyAngle;
+                this.bipedEars.rotateAngleX -= (float)zyAngle;
+
+                this.bipedBody.rotateAngleZ += (float)xyAngle;
+                this.bipedHead.rotateAngleZ -= (float)zyAngle;
+                this.bipedHeadwear.rotateAngleZ -= (float)zyAngle;
+                this.bipedEars.rotateAngleZ -= (float)zyAngle;
+
+                this.bipedRightLeg.rotationPointZ = 0.1F;
+                this.bipedLeftLeg.rotationPointZ = 0.1F;
+                this.bipedRightLeg.rotationPointY = 12.0F;
+                this.bipedLeftLeg.rotationPointY = 12.0F;
+    //            this.bipedHead.rotationPointY = 0.0F;
+    //            this.bipedHeadwear.rotationPointY = 0.0F;
+            }
         }
 
         this.bipedRightArm.rotateAngleZ += MathHelper.cos(p_78087_3_ * 0.09F) * 0.05F + 0.05F;
@@ -233,8 +412,12 @@
     {
         this.bipedEars.rotateAngleY = this.bipedHead.rotateAngleY;
         this.bipedEars.rotateAngleX = this.bipedHead.rotateAngleX;
-        this.bipedEars.rotationPointX = 0.0F;
-        this.bipedEars.rotationPointY = 0.0F;
+        /** MINECRIFT **/
+        if (!vrMode) {
+            this.bipedEars.rotationPointX = 0.0F;
+            this.bipedEars.rotationPointY = 0.0F;
+        }
+        /** END MINECRIFT **/
         this.bipedEars.render(p_78110_1_);
     }
 
@@ -245,4 +428,18 @@
     {
         this.bipedCloak.render(p_78111_1_);
     }
+
+    /**** MINECRIFT ADDITIONS BELOW ****/
+
+    public ModelRenderer createModelRenderer(int sizeX, int sizeY, int sizeZ,
+                                             float rotPointOffsetX, float rotPointOffsetY, float rotPointOffsetZ,
+                                             float posOffsetFromRotPointX, float posOffsetFromRotPointY, float posOffsetFromRotPointZ,
+                                             float scaleFactor,
+                                             int textureOffsetX, int textureOffsetY)
+    {
+        ModelRenderer mr = new ModelRenderer(this, textureOffsetX, textureOffsetY);
+        mr.addBox(rotPointOffsetX, rotPointOffsetY, rotPointOffsetZ, sizeX, sizeY, sizeZ, scaleFactor);
+        mr.setRotationPoint(posOffsetFromRotPointX, posOffsetFromRotPointY, posOffsetFromRotPointZ);
+        return mr;
+    }
 }
