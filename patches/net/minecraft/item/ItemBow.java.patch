--- a/net/minecraft/item/ItemBow.java
+++ b/net/minecraft/item/ItemBow.java
@@ -1,5 +1,6 @@
 package net.minecraft.item;
 
+import net.minecraft.client.Minecraft;
 import net.minecraft.client.renderer.texture.IIconRegister;
 import net.minecraft.creativetab.CreativeTabs;
 import net.minecraft.enchantment.Enchantment;
@@ -26,67 +27,68 @@
     /**
      * called when the player releases the use item button. Args: itemstack, world, entityplayer, itemInUseCount
      */
-    public void onPlayerStoppedUsing(ItemStack p_77615_1_, World p_77615_2_, EntityPlayer p_77615_3_, int p_77615_4_)
+    public void onPlayerStoppedUsing(ItemStack bowItemStack, World world_, EntityPlayer player, int inUseLength)
     {
-        boolean var5 = p_77615_3_.capabilities.isCreativeMode || EnchantmentHelper.getEnchantmentLevel(Enchantment.infinity.effectId, p_77615_1_) > 0;
+        boolean infiniteAmmo = player.capabilities.isCreativeMode || EnchantmentHelper.getEnchantmentLevel(Enchantment.infinity.effectId, bowItemStack) > 0;
 
-        if (var5 || p_77615_3_.inventory.hasItem(Items.arrow))
+        if (infiniteAmmo || player.inventory.hasItem(Items.arrow))
         {
-            int var6 = this.getMaxItemUseDuration(p_77615_1_) - p_77615_4_;
-            float var7 = (float)var6 / 20.0F;
-            var7 = (var7 * var7 + var7 * 2.0F) / 3.0F;
 
-            if ((double)var7 < 0.1D)
+        	int shotStrPercent = this.getMaxItemUseDuration(bowItemStack) - inUseLength;
+            float shotDamage = (float)shotStrPercent / 20.0F;
+            shotDamage = (shotDamage * shotDamage + shotDamage * 2.0F) / 3.0F;
+
+            if ((double)shotDamage < 0.1D)
             {
                 return;
             }
 
-            if (var7 > 1.0F)
+            if (shotDamage > 1.0F)
             {
-                var7 = 1.0F;
+                shotDamage = 1.0F;
             }
 
-            EntityArrow var8 = new EntityArrow(p_77615_2_, p_77615_3_, var7 * 2.0F);
+            EntityArrow theArrow = new EntityArrow(world_, player, shotDamage * 2.0F);
 
-            if (var7 == 1.0F)
+            if (shotDamage == 1.0F)
             {
-                var8.setIsCritical(true);
+                theArrow.setIsCritical(true);
             }
 
-            int var9 = EnchantmentHelper.getEnchantmentLevel(Enchantment.power.effectId, p_77615_1_);
+            int venchantLevel = EnchantmentHelper.getEnchantmentLevel(Enchantment.power.effectId, bowItemStack);
 
-            if (var9 > 0)
+            if (venchantLevel > 0)
             {
-                var8.setDamage(var8.getDamage() + (double)var9 * 0.5D + 0.5D);
+                theArrow.setDamage(theArrow.getDamage() + (double)venchantLevel * 0.5D + 0.5D);
             }
 
-            int var10 = EnchantmentHelper.getEnchantmentLevel(Enchantment.punch.effectId, p_77615_1_);
+            int var10 = EnchantmentHelper.getEnchantmentLevel(Enchantment.punch.effectId, bowItemStack);
 
             if (var10 > 0)
             {
-                var8.setKnockbackStrength(var10);
+                theArrow.setKnockbackStrength(var10);
             }
 
-            if (EnchantmentHelper.getEnchantmentLevel(Enchantment.flame.effectId, p_77615_1_) > 0)
+            if (EnchantmentHelper.getEnchantmentLevel(Enchantment.flame.effectId, bowItemStack) > 0)
             {
-                var8.setFire(100);
+                theArrow.setFire(100);
             }
 
-            p_77615_1_.damageItem(1, p_77615_3_);
-            p_77615_2_.playSoundAtEntity(p_77615_3_, "random.bow", 1.0F, 1.0F / (itemRand.nextFloat() * 0.4F + 1.2F) + var7 * 0.5F);
+            bowItemStack.damageItem(1, player);
+            world_.playSoundAtEntity(player, "random.bow", 1.0F, 1.0F / (itemRand.nextFloat() * 0.4F + 1.2F) + shotDamage * 0.5F);
 
-            if (var5)
+            if (infiniteAmmo)
             {
-                var8.canBePickedUp = 2;
+                theArrow.canBePickedUp = 2;
             }
             else
             {
-                p_77615_3_.inventory.consumeInventoryItem(Items.arrow);
+                player.inventory.consumeInventoryItem(Items.arrow);
             }
 
-            if (!p_77615_2_.isRemote)
+            if (!world_.isRemote)
             {
-                p_77615_2_.spawnEntityInWorld(var8);
+                world_.spawnEntityInWorld(theArrow);
             }
         }
     }
