--- a/net/minecraft/src/ItemRendererOF.java
+++ b/net/minecraft/src/ItemRendererOF.java
@@ -3,6 +3,7 @@
 import java.lang.reflect.Field;
 import net.minecraft.block.Block;
 import net.minecraft.client.Minecraft;
+import net.minecraft.client.entity.EntityPlayerSP;
 import net.minecraft.client.renderer.ItemRenderer;
 import net.minecraft.client.renderer.OpenGlHelper;
 import net.minecraft.client.renderer.RenderBlocks;
@@ -12,9 +13,12 @@
 import net.minecraft.entity.EntityLivingBase;
 import net.minecraft.item.Item;
 import net.minecraft.item.ItemBlock;
+import net.minecraft.item.ItemBow;
 import net.minecraft.item.ItemStack;
 import net.minecraft.util.IIcon;
 import net.minecraft.util.ResourceLocation;
+import net.minecraft.util.Vec3;
+
 import org.lwjgl.opengl.GL11;
 import org.lwjgl.opengl.GL12;
 
@@ -50,125 +54,136 @@
      */
     public void renderItem(EntityLivingBase par1EntityLivingBase, ItemStack par2ItemStack, int par3)
     {
-        GL11.glPushMatrix();
-        TextureManager var4 = this.mc.getTextureManager();
-        Item var5 = par2ItemStack.getItem();
-        Block var6 = Block.getBlockFromItem(var5);
-
-        if (par2ItemStack != null && var6 != null && var6.getRenderBlockPass() != 0)
-        {
-            GL11.glEnable(GL11.GL_BLEND);
-            GL11.glEnable(GL11.GL_CULL_FACE);
-            OpenGlHelper.glBlendFunc(770, 771, 1, 0);
-        }
-
-        Object type = null;
-        Object customRenderer = null;
-
-        if (Reflector.MinecraftForgeClient_getItemRenderer.exists())
-        {
-            type = Reflector.getFieldValue(Reflector.ItemRenderType_EQUIPPED);
-            customRenderer = Reflector.call(Reflector.MinecraftForgeClient_getItemRenderer, new Object[] {par2ItemStack, type});
-        }
-
-        if (customRenderer != null)
-        {
-            var4.bindTexture(var4.getResourceLocation(par2ItemStack.getItemSpriteNumber()));
-            Reflector.callVoid(Reflector.ForgeHooksClient_renderEquippedItem, new Object[] {type, customRenderer, this.renderBlocksIr, par1EntityLivingBase, par2ItemStack});
-        }
-        else if (par2ItemStack.getItemSpriteNumber() == 0 && var5 instanceof ItemBlock && RenderBlocks.renderItemIn3d(var6.getRenderType()))
-        {
-            var4.bindTexture(var4.getResourceLocation(0));
-
-            if (par2ItemStack != null && var6 != null && var6.getRenderBlockPass() != 0)
-            {
-                GL11.glDepthMask(false);
-                this.renderBlocksIr.renderBlockAsItem(var6, par2ItemStack.getMetadata(), 1.0F);
-                GL11.glDepthMask(true);
-            }
-            else
-            {
-                this.renderBlocksIr.renderBlockAsItem(var6, par2ItemStack.getMetadata(), 1.0F);
-            }
-        }
-        else
-        {
-            IIcon var7 = par1EntityLivingBase.getItemIcon(par2ItemStack, par3);
-
-            if (var7 == null)
-            {
-                GL11.glPopMatrix();
-                return;
-            }
-
-            var4.bindTexture(var4.getResourceLocation(par2ItemStack.getItemSpriteNumber()));
-            TextureUtil.func_152777_a(false, false, 1.0F);
-            Tessellator var8 = Tessellator.instance;
-            float var9 = var7.getMinU();
-            float var10 = var7.getMaxU();
-            float var11 = var7.getMinV();
-            float var12 = var7.getMaxV();
-            float var13 = 0.0F;
-            float var14 = 0.3F;
-            GL11.glEnable(GL12.GL_RESCALE_NORMAL);
-            GL11.glTranslatef(-var13, -var14, 0.0F);
-            float var15 = 1.5F;
-            GL11.glScalef(var15, var15, var15);
-            GL11.glRotatef(50.0F, 0.0F, 1.0F, 0.0F);
-            GL11.glRotatef(335.0F, 0.0F, 0.0F, 1.0F);
-            GL11.glTranslatef(-0.9375F, -0.0625F, 0.0F);
-            renderItemIn2D(var8, var10, var11, var9, var12, var7.getIconWidth(), var7.getIconHeight(), 0.0625F);
-            boolean renderEffect = false;
-
-            if (Reflector.ForgeItemStack_hasEffect.exists())
-            {
-                renderEffect = Reflector.callBoolean(par2ItemStack, Reflector.ForgeItemStack_hasEffect, new Object[] {Integer.valueOf(par3)});
-            }
-            else
-            {
-                renderEffect = par2ItemStack.hasEffect() && par3 == 0;
-            }
-
-            if (renderEffect)
-            {
-                GL11.glDepthFunc(GL11.GL_EQUAL);
-                GL11.glDisable(GL11.GL_LIGHTING);
-                var4.bindTexture(RES_ITEM_GLINT);
-                GL11.glEnable(GL11.GL_BLEND);
-                OpenGlHelper.glBlendFunc(768, 1, 1, 0);
-                float var16 = 0.76F;
-                GL11.glColor4f(0.5F * var16, 0.25F * var16, 0.8F * var16, 1.0F);
-                GL11.glMatrixMode(GL11.GL_TEXTURE);
-                GL11.glPushMatrix();
-                float var17 = 0.125F;
-                GL11.glScalef(var17, var17, var17);
-                float var18 = (float)(Minecraft.getSystemTime() % 3000L) / 3000.0F * 8.0F;
-                GL11.glTranslatef(var18, 0.0F, 0.0F);
-                GL11.glRotatef(-50.0F, 0.0F, 0.0F, 1.0F);
-                renderItemIn2D(var8, 0.0F, 0.0F, 1.0F, 1.0F, 16, 16, 0.0625F);
-                GL11.glPopMatrix();
-                GL11.glPushMatrix();
-                GL11.glScalef(var17, var17, var17);
-                var18 = (float)(Minecraft.getSystemTime() % 4873L) / 4873.0F * 8.0F;
-                GL11.glTranslatef(-var18, 0.0F, 0.0F);
-                GL11.glRotatef(10.0F, 0.0F, 0.0F, 1.0F);
-                renderItemIn2D(var8, 0.0F, 0.0F, 1.0F, 1.0F, 16, 16, 0.0625F);
-                GL11.glPopMatrix();
-                GL11.glMatrixMode(GL11.GL_MODELVIEW);
-                GL11.glDisable(GL11.GL_BLEND);
-                GL11.glEnable(GL11.GL_LIGHTING);
-                GL11.glDepthFunc(GL11.GL_LEQUAL);
-            }
-
-            GL11.glDisable(GL12.GL_RESCALE_NORMAL);
-            var4.bindTexture(var4.getResourceLocation(par2ItemStack.getItemSpriteNumber()));
-            TextureUtil.func_147945_b();
-        }
-
-        if (par2ItemStack != null && var6 != null && var6.getRenderBlockPass() != 0)
-        {
-            GL11.glDisable(GL11.GL_BLEND);
-        }
+         GL11.glPushMatrix();
+	        TextureManager var4 = this.mc.getTextureManager();
+	        Item var5 = par2ItemStack.getItem();
+	        Block var6 = Block.getBlockFromItem(var5);
+	
+	        if (par2ItemStack != null && var6 != null && var6.getRenderBlockPass() != 0)
+	        {
+	            GL11.glEnable(GL11.GL_BLEND);
+	            GL11.glEnable(GL11.GL_CULL_FACE);
+	            OpenGlHelper.glBlendFunc(770, 771, 1, 0);
+	        }
+	
+	        Object type = null;
+	        Object customRenderer = null;
+	
+	        if (Reflector.MinecraftForgeClient_getItemRenderer.exists())
+	        {
+	            type = Reflector.getFieldValue(Reflector.ItemRenderType_EQUIPPED);
+	            if(this.isFP)  type = Reflector.getFieldValue(Reflector.ItemRenderType_EQUIPPED);
+	            customRenderer = Reflector.call(Reflector.MinecraftForgeClient_getItemRenderer, new Object[] {par2ItemStack, type});
+	        }
+	
+	        if (customRenderer != null)
+	        {
+	          var4.bindTexture(var4.getResourceLocation(par2ItemStack.getItemSpriteNumber()));
+	      //      Reflector.callVoid(Reflector.ForgeHooksClient_renderEquippedItem, new Object[] {type, customRenderer, this.renderBlocksIr, par1EntityLivingBase, par2ItemStack});
+	          //basic forge transformations it applies to everythinbg
+	          if(!(par2ItemStack.getItem() instanceof ItemBlock)){
+	          	GL11.glTranslatef(-0.3F, .3F, -0.04F);
+	            GL11.glScalef(1.5F, 1.5F, 1.5F);
+	          }
+	          
+	            Reflector.callVoid(customRenderer, Reflector.IItemRenderer_renderItem, new Object[] {type, par2ItemStack,new Object[] { this.renderBlocksIr, par1EntityLivingBase}});
+ 
+	        }
+	        else if (par2ItemStack.getItemSpriteNumber() == 0 && var5 instanceof ItemBlock && RenderBlocks.renderItemIn3d(var6.getRenderType()))
+	        {
+	            var4.bindTexture(var4.getResourceLocation(0));
+	
+	            if (par2ItemStack != null && var6 != null && var6.getRenderBlockPass() != 0)
+	            {
+	                GL11.glDepthMask(false);
+	                this.renderBlocksIr.renderBlockAsItem(var6, par2ItemStack.getMetadata(), 1.0F);
+	                GL11.glDepthMask(true);
+	            }
+	            else
+	            {
+	                this.renderBlocksIr.renderBlockAsItem(var6, par2ItemStack.getMetadata(), 1.0F);
+	            }
+	        }
+	        else
+	        {
+	            IIcon var7 = par1EntityLivingBase.getItemIcon(par2ItemStack, par3);
+	
+	            if (var7 == null)
+	            {
+	                GL11.glPopMatrix();
+	                return;
+	            }
+	            var4.bindTexture(var4.getResourceLocation(par2ItemStack.getItemSpriteNumber()));
+	            TextureUtil.func_152777_a(false, false, 1.0F);
+	            Tessellator var8 = Tessellator.instance;
+	            float var9 = var7.getMinU();
+	            float var10 = var7.getMaxU();
+	            float var11 = var7.getMinV();
+	            float var12 = var7.getMaxV();
+	            float var13 = 0.0F;
+	            float var14 = 0.3F;
+	            GL11.glEnable(GL12.GL_RESCALE_NORMAL);
+	            float var15 = 1.5F;
+	            GL11.glScalef(var15, var15, var15);                 
+	            if(!(par1EntityLivingBase == mc.thePlayer)){
+	            	if(!(par1EntityLivingBase instanceof EntityPlayerSP) || !(par2ItemStack.getItem() instanceof ItemBow)){
+	            		GL11.glRotatef(0.0F, 0.0F, 1.0F, 0.0F);
+	            		GL11.glRotatef(0F, 0.0F, 0.0F, 1.0F);
+	            		GL11.glTranslatef(-0.8375F, -0.0625F, 0.0F);            	       	
+	            	}                
+	            }
+	            renderItemIn2D(var8, var10, var11, var9, var12, var7.getIconWidth(), var7.getIconHeight(), 0.0625F);
+	            boolean renderEffect = false;
+	
+	            if (Reflector.ForgeItemStack_hasEffect.exists())
+	            {
+	                renderEffect = Reflector.callBoolean(par2ItemStack, Reflector.ForgeItemStack_hasEffect, new Object[] {Integer.valueOf(par3)});
+	            }
+	            else
+	            {
+	                renderEffect = par2ItemStack.hasEffect() && par3 == 0;
+	            }
+	
+	            if (renderEffect)
+	            {
+	                GL11.glDepthFunc(GL11.GL_EQUAL);
+	                GL11.glDisable(GL11.GL_LIGHTING);
+	                var4.bindTexture(RES_ITEM_GLINT);
+	                GL11.glEnable(GL11.GL_BLEND);
+	                OpenGlHelper.glBlendFunc(768, 1, 1, 0);
+	                float var16 = 0.76F;
+	                GL11.glColor4f(0.5F * var16, 0.25F * var16, 0.8F * var16, 1.0F);
+	                GL11.glMatrixMode(GL11.GL_TEXTURE);
+	                GL11.glPushMatrix();
+	                float var17 = 0.125F;
+	                GL11.glScalef(var17, var17, var17);
+	                float var18 = (float)(Minecraft.getSystemTime() % 3000L) / 3000.0F * 8.0F;
+	                GL11.glTranslatef(var18, 0.0F, 0.0F);
+	                GL11.glRotatef(-50.0F, 0.0F, 0.0F, 1.0F);
+	                renderItemIn2D(var8, 0.0F, 0.0F, 1.0F, 1.0F, 16, 16, 0.0625F);
+	                GL11.glPopMatrix();
+	                GL11.glPushMatrix();
+	                GL11.glScalef(var17, var17, var17);
+	                var18 = (float)(Minecraft.getSystemTime() % 4873L) / 4873.0F * 8.0F;
+	                GL11.glTranslatef(-var18, 0.0F, 0.0F);
+	                GL11.glRotatef(10.0F, 0.0F, 0.0F, 1.0F);
+	                renderItemIn2D(var8, 0.0F, 0.0F, 1.0F, 1.0F, 16, 16, 0.0625F);
+	                GL11.glPopMatrix();
+	                GL11.glMatrixMode(GL11.GL_MODELVIEW);
+	                GL11.glDisable(GL11.GL_BLEND);
+	                GL11.glEnable(GL11.GL_LIGHTING);
+	                GL11.glDepthFunc(GL11.GL_LEQUAL);
+	            }
+	
+	            GL11.glDisable(GL12.GL_RESCALE_NORMAL);
+	            var4.bindTexture(var4.getResourceLocation(par2ItemStack.getItemSpriteNumber()));
+	            TextureUtil.func_147945_b();
+	        }
+	
+	        if (par2ItemStack != null && var6 != null && var6.getRenderBlockPass() != 0)
+	        {
+	            GL11.glDisable(GL11.GL_BLEND);
+	        }
 
         GL11.glPopMatrix();
     }
